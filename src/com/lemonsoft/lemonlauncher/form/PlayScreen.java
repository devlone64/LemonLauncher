package com.lemonsoft.lemonlauncher.form;

import com.lemonsoft.lemonlauncher.Lemon;
import com.lemonsoft.lemonlauncher.client.MCVersion;
import com.lemonsoft.lemonlauncher.data.MCAccount;
import com.lemonsoft.lemonlauncher.data.MCInfo;
import com.lemonsoft.lemonlauncher.util.SwingUtil;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import static com.lemonsoft.lemonlauncher.util.FileUtil.getInstance;
import java.net.URL;

/**
 *
 * @author lone64dev
 * 
 */
public class PlayScreen extends JFrame {
    
    private final MCAccount account;

    /**
     * Creates new form PlayScreen
     * @param account
     */
    public PlayScreen(MCAccount account) {
        initComponents();
        this.account = account;
        
        this.usernameLabel.setText(account.getUsername());
        SwingUtil.clearChoice(this.versionSelection);
        MCVersion.getAPI().getVersionSelections().forEach(client -> versionSelection.add(client.getName()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        playButton = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        versionSelection = new java.awt.Choice();
        folderLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lemon Launcher");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/main_bg_image.png"))); // NOI18N
        getContentPane().add(ImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 390));

        bottomPanel.setBackground(new java.awt.Color(51, 51, 51));

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/buttons/play_btn.png"))); // NOI18N
        playButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playButtonMouseClicked(evt);
            }
        });

        usernameLabel.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 14)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/profile_icon.png"))); // NOI18N
        usernameLabel.setText("#UserName");

        versionSelection.setBackground(new java.awt.Color(51, 51, 51));
        versionSelection.setFocusable(false);
        versionSelection.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        versionSelection.setForeground(new java.awt.Color(255, 255, 255));

        folderLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/folder_icon.png"))); // NOI18N
        folderLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        folderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                folderLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(versionSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addComponent(folderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playButton)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(folderLabel)
                    .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(playButton)
                        .addGroup(bottomPanelLayout.createSequentialGroup()
                            .addComponent(usernameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(versionSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        getContentPane().add(bottomPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 705, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseClicked
        String name = this.versionSelection.getSelectedItem();
        MCInfo client = MCVersion.getAPI().getClient(name);
        if (client == null) {
            JOptionPane.showMessageDialog(this, "클라이언트 정보를 불러올 수 없습니다.", "Lemon Launcher", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RunScreen.open(client, account);
        hide();
    }//GEN-LAST:event_playButtonMouseClicked

    private void folderLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_folderLabelMouseClicked
        try {
            Desktop.getDesktop().open(getInstance());
        } catch (IOException e) {
            Logger.getLogger("LemonLauncher").log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_folderLabelMouseClicked

    public void setIconImage() {
        URL imgURL = Lemon.class.getResource("/assets/icons/app_icon.png");
        ImageIcon icon = new ImageIcon(imgURL);
        setIconImage(icon.getImage());
    }
    
    /**
     * @param account
     */
    public static void open(MCAccount account) {
        EventQueue.invokeLater(() -> {
            PlayScreen screen = new PlayScreen(account);
            screen.setLocationRelativeTo(null);
            screen.setVisible(true);
            screen.setIconImage();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JLabel folderLabel;
    private javax.swing.JLabel playButton;
    private javax.swing.JLabel usernameLabel;
    private java.awt.Choice versionSelection;
    // End of variables declaration//GEN-END:variables

    public MCAccount getAccount() {
        return account;
    }
    
}